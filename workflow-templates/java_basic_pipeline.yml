#Set image_name and service_name envs, import project in sonar cloud and set SONAR_TOKEN given in import process
name: Build and deploy

on:
  push:

env:
  image_name: #<IMAGE NAME>
  service_name: #<SERVICE NAME>
  version: ${{ github.run_number }}

jobs:
  
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 16
      uses: actions/setup-java@v2
      with:
        java-version: '16'
        distribution: 'adopt'
        cache: 'gradle'
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build jacocoTestReport sonarqube --info
    - name: Store build artifact
      uses: actions/upload-artifact@v2
      with:
        name: artifact
        path: |
            build/libs/*.jar
            Dockerfile
            elasticapm.properties
    
  docker:
    name: Build docker image
    runs-on: ubuntu-20.04
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: build
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          pull: true
          push: true
          tags: | 
            ghcr.io/protectorinsurance/${{ env.image_name }}:${{ github.run_number }}
            ghcr.io/protectorinsurance/${{ env.image_name }}:latest
            
  deploy_test:
    runs-on: self-hosted
    needs: docker
    steps:
      - name: Deploy to test
        id: testdeploy
        uses: protectorinsurance/swarm-ssh-deployer@v1
        with:
          service-name: ${{ env.service_name }}
          image: ghcr.io/protectorinsurance/${{ env.image_name }}
          image-tag: ${{ env.version }}
          private-key: ${{secrets.DEPLOY_PRIVATE_KEY_FILENAME}}
          username: ${{secrets.DEPLOY_USERNAME}}
          hostname: ${{secrets.TEST_DEPLOY_HOSTNAME}}
          port: ${{secrets.DEPLOY_PORT}}
          ghcr-username: ${{ secrets.PROTECTOR_GITHUB_MACHINE_USER }}
          ghcr-token: ${{ secrets.PROTECTOR_GITHUB_MACHINE_TOKEN }}
