name: Build main

on:
  push:
    branches:
      - main

env:
  # Set deploy information for the service
  image_name: #<docker image name>
  service_name: #<docker service name>
  version: ${{ github.run_number }}

jobs:
  build:
    name: Build and analyze
    # Use 'self-hosted' if the build requires any internal resources
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v2
        with:
          # Set correct Java version
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Build
        # Set correct build command
        run: ./gradlew build sonarqube
        env:
          # Used for accessing Protector package repositories on GitHub
          PROTECTOR_GITHUB_USER: ${{ secrets.PROTECTOR_GITHUB_MACHINE_USER }}
          PROTECTOR_GITHUB_TOKEN: ${{ secrets.PROTECTOR_GITHUB_MACHINE_TOKEN }}
          # Used for accessing SonarCloud
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - uses: actions/upload-artifact@v2
        with:
          name: artifact
          # Set paths to all files that are required for the Docker image
          path: |
            build/libs/*
            elasticapm.properties
            Dockerfile
  docker:
    name: Build docker image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          pull: true
          push: true
          tags: |
            ghcr.io/protectorinsurance/${{ env.image_name }}:${{ env.version }}
            ghcr.io/protectorinsurance/${{ env.image_name }}:latest
  deploy_test:
    name: Deploy to test
    runs-on: [self-hosted, test]
    needs: docker
    steps:
      - name: Deploy to test
        uses: protectorinsurance/swarm-ssh-deployer@v1
        with:
          service-name: ${{ env.service_name }}
          image: ghcr.io/protectorinsurance/${{ env.image_name }}
          image-tag: ${{ env.version }}
          private-key: ${{ secrets.DEPLOY_PRIVATE_KEY_FILENAME }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          hostname: ${{ secrets.TEST_DEPLOY_HOSTNAME }}
          port: ${{ secrets.DEPLOY_PORT }}
          ghcr-username: ${{ secrets.PROTECTOR_GITHUB_MACHINE_USER }}
          ghcr-token: ${{ secrets.PROTECTOR_GITHUB_MACHINE_TOKEN }}
  if_failure:
    name: Teams notification on failure(s)
    runs-on: ubuntu-latest
    if: ${{ failure() }}
    needs: [ build, docker, deploy_test ]
    steps:
      - uses: actions/checkout@v2
      - name: Microsoft Teams Notification
        uses: skitionek/notify-microsoft-teams@master
        with:
          # Set the correct webhook secret for the desired Teams channel
          webhook_url: ${{ secrets.REPLACE_WITH_TEAMS_WEBHOOK }}
          needs: ${{ toJson(needs) }}
          job: ${{ toJson(job) }}
          steps: ${{ toJson(steps) }}
